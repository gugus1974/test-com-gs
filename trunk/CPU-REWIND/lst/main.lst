C51 COMPILER V8.05a   MAIN                                                                 03/11/2010 12:19:50 PAGE 1   


C51 COMPILER V8.05a, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\exe\main.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE src\main.c OPTIMIZE(SIZE) CODE SYMBOLS PRINT(.\lst\main.lst) PREPRINT(.\lst
                    -\main.i) OBJECT(.\exe\main.obj)

line level    source

   1          #include <reg51.h>
   2          #include <stdio.h>
   3          
   4          #include "util.h"
   5          #include "test_ram.h"
   6          #include "adc.h"
   7          #include "pio.h"
   8          #include "uart8251.h"
   9          
  10          /*------------------------------------------------
  11          Definizione variabili
  12          ------------------------------------------------*/
  13          //sfr   P3 = 0xB0;      
  14          sbit    WD = P3^5;
  15          sbit    uart_tx_enable = P3^4;
  16          
  17          //static unsigned short idata timer0_tick=0;
  18          unsigned short idata timer0_tick=0;
  19          
  20          
  21          unsigned char del;
  22          unsigned char aaa;
  23          unsigned char tipo_scheda;
  24          unsigned char ritardo;
  25          char scelta_test;
  26          char scelta_scheda;
  27          
  28          int get_timer0();
  29          /*------------------------------------------------
  30                  Interrupt Service Routines
  31          ------------------------------------------------*/
  32          static void timer0_isr (void) interrupt 1
  33          {
  34   1              TR0 = 0;  //ferma il timer
  35   1              EA = 0;   // disabilita interrupt entranti
  36   1              
  37   1              WD ^= 1;        //toggle per zittire il cane da guardia
  38   1              timer0_tick++;
  39   1              TH0 = 0x4b;      //setta il punto di partenza del timer0
  40   1              TL0 = 0xff;
  41   1              
  42   1              TR0 = 1;   //via!
  43   1              EA  = 1;
  44   1      }
  45          
  46          /*------------------------------------------------
  47                  Definizione delle Funzioni
  48          ------------------------------------------------*/
  49          
  50          int get_timer0(void)
  51          {
  52   1              return ((int)timer0_tick);
  53   1      }
  54          
C51 COMPILER V8.05a   MAIN                                                                 03/11/2010 12:19:50 PAGE 2   

  55          void init (void)
  56          {
  57   1              SCON    = 0x52;         //SCON 0101 0010
  58   1              TMOD    = 0x21;         //timer 1,8-bit autoreload
  59   1                                                      //timer 0, 16 bit
  60   1      
  61   1          TH1         = 0xfd;         //f3 2400bps con SMOD 0//fd 9600bps con SMOD 0// 0xfd 19200 con SMOD =1   
  62   1              TL1     = TH1;
  63   1      
  64   1              TH0     = 0x4b;         //4bff=ffff-46080 -> 50ms
  65   1              TL0     = 0xff;
  66   1      
  67   1              IP              = 0x02;         // timer 0 prioritario
  68   1      //      IE              = 0x82;         // abilita l'interrupt per overflow del timer 0
  69   1              IT0     = 1;            // Configure interrupt 0 for falling edge on /INT0 (P3.2)
  70   1              IT1     = 1;            // Configure interrupt 0 for falling edge on /INT0 (P3.2)
  71   1              IE              = 0x87;         // abilita l'interrupt per overflow del timer 0
  72   1              ET0     = 1;            /* Enable Timer 0 Interrupts */
  73   1      
  74   1              TR0     = 1;    /* Start Timer 0 Running */
  75   1              TR1     = 1;    /* Start Timer 1 Running */
  76   1      
  77   1          TI          = 1;    /* TI:   set TI to send first char of UART    */
  78   1              
  79   1              uart_tx_enable =0; // abilita la TX         
  80   1      }
  81          /*
  82          void echo (void)
  83          {
  84                  printf("\necho attivo\n");
  85                  do
  86                  {
  87                          aaa = _getkey();
  88                          putchar(aaa);
  89                   }
  90                   while ((aaa != 0x0D) || (aaa != 0x0A));
  91          }
  92          */
  93          /*------------------------------------------------
  94                  Stampa menu test
  95          ------------------------------------------------*/
  96          
  97          void menu (void)
  98          {
  99   1          unsigned char       exit_menu; 
 100   1              char c;
 101   1              do
 102   1          {
 103   2                      printf("\n\n");
 104   2                      printf("***********************************\n");
 105   2                      printf("*   Collaudo scheda CPU REVIND    *\n");
 106   2                      printf("*   sw ver. testrew 1.0           *\n");
 107   2      
 108   2                      if (tipo_scheda == 1)   printf("*   scheda tipo: DG630-12 (x16)   *\n");
 109   2                      if (tipo_scheda == 2)   printf("*   scheda tipo: DG630-29 (x64)   *\n");
 110   2                      printf("***********************************\n");
 111   2                      printf("\n\n");
 112   2                      printf("         1 - test RAM\n");
 113   2                      printf("         2 - test ADC\n");
 114   2                      printf("         3 - test I/O Progr\n");
 115   2                      printf("         4 - test UART_U27 - RICEZIONE\n");
 116   2                      printf("         5 - test UART_U27 - TRASMISSIONE\n");
C51 COMPILER V8.05a   MAIN                                                                 03/11/2010 12:19:50 PAGE 3   

 117   2                      printf("         6 - test UART_U30\n");
 118   2                      printf("         7 - set tipo scheda \n\n");
 119   2                  printf ("\n\n     Scelta test: ");
 120   2                  //scanf ("%d", &scelta_test);
 121   2                      c = _getkey();
 122   2      
 123   2                      scelta_test = c-0x30;
 124   2                      
 125   2                      if(scelta_test>0 && scelta_test<8)
 126   2                          exit_menu=1;
 127   2                      else 
 128   2                              exit_menu=0;
 129   2              
 130   2                      /*inserire qui il sottomenu*/
 131   2              
 132   2              }
 133   1              while(!exit_menu);
 134   1      }
 135          unsigned char menu_scheda (void)
 136          {
 137   1          unsigned char       exit_menu; 
 138   1              char c;
 139   1              do
 140   1          {
 141   2                      printf("\n\n");
 142   2                      printf("***********************************\n");
 143   2                      printf("*   Collaudo scheda CPU REVIND    *\n");
 144   2                      printf("*   sw ver. testrew 1.0           *\n");
 145   2                      printf("***********************************\n");
 146   2                      printf("\n\n");
 147   2                      printf("         1 - DG630-12(prescaler x16)\n");
 148   2                      printf("         2 - DG630-29(prescaler x64)\n");
 149   2                  printf ("\n\n     Scelta scheda: ");
 150   2                      c = _getkey();
 151   2      
 152   2                      scelta_scheda = c-0x30;
 153   2                      
 154   2                      if(scelta_scheda>0 && scelta_scheda<3)
 155   2                          exit_menu=1;
 156   2                      else 
 157   2                              exit_menu=0;
 158   2              
 159   2                      /*inserire qui il sottomenu*/
 160   2              
 161   2              }
 162   1              while(!exit_menu);
 163   1              return scelta_scheda;
 164   1      }
 165          
 166          /*------------------------------------------------
 167          MAIN Program
 168          ------------------------------------------------*/
 169          void main (void)
 170          {
 171   1              /*--------------------------------------
 172   1              Configura la seriale del micro 
 173   1              --------------------------------------*/
 174   1              
 175   1              init();         //configura i registr della uart e del TIMER1
 176   1              WD = 0;                 /* setta il P3.5 */
 177   1              /*--------------------------------------
 178   1                      MAIN LOOP
C51 COMPILER V8.05a   MAIN                                                                 03/11/2010 12:19:50 PAGE 4   

 179   1              --------------------------------------*/
 180   1              printf("\n\n\n");
 181   1              printf("\n\n\n");
 182   1              tipo_scheda = menu_scheda();
 183   1      
 184   1              while (1)
 185   1              {
 186   2      /**
 187   2                      test_uartU27_rx_tx();
 188   2      **/
 189   2      //              tipo_scheda = menu_scheda();
 190   2                      
 191   2                      menu();
 192   2      
 193   2                      switch (scelta_test)
 194   2                      {
 195   3                       case 1:        test_ram();
 196   3                                              break;
 197   3                       case 2:        test_adc();
 198   3                                              break;
 199   3                       case 3:        test_pio_menu();
 200   3                                              break;
 201   3                       case 4:        test_uartU27_ricevi();
 202   3                                              break;
 203   3                       case 5:        test_uartU27_trasmetti();
 204   3                                              break;
 205   3                       case 6:        test_uartU30();
 206   3                                              break;
 207   3                       case 7:        tipo_scheda = menu_scheda();
 208   3                                              break;
 209   3      
 210   3                      default: break;
 211   3      
 212   3                      }
 213   2      /**/
 214   2              }
 215   1      }
C51 COMPILER V8.05a   MAIN                                                                 03/11/2010 12:19:50 PAGE 5   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION timer0_isr (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0D0              PUSH    PSW
0004 75D000            MOV     PSW,#00H
0007 C000              PUSH    AR0
                                           ; SOURCE LINE # 32
                                           ; SOURCE LINE # 34
0009 C28C              CLR     TR0
                                           ; SOURCE LINE # 35
000B C2AF              CLR     EA
                                           ; SOURCE LINE # 37
000D A2B5              MOV     C,WD
000F B3                CPL     C
0010 92B5              MOV     WD,C
                                           ; SOURCE LINE # 38
0012 7800        R     MOV     R0,#LOW timer0_tick+01H
0014 06                INC     @R0
0015 E6                MOV     A,@R0
0016 18                DEC     R0
0017 7001              JNZ     ?C0030
0019 06                INC     @R0
001A         ?C0030:
                                           ; SOURCE LINE # 39
001A 758C4B            MOV     TH0,#04BH
                                           ; SOURCE LINE # 40
001D 758AFF            MOV     TL0,#0FFH
                                           ; SOURCE LINE # 42
0020 D28C              SETB    TR0
                                           ; SOURCE LINE # 43
0022 D2AF              SETB    EA
                                           ; SOURCE LINE # 44
0024 D000              POP     AR0
0026 D0D0              POP     PSW
0028 D0E0              POP     ACC
002A 32                RETI    
             ; FUNCTION timer0_isr (END)

             ; FUNCTION get_timer0 (BEGIN)
                                           ; SOURCE LINE # 50
                                           ; SOURCE LINE # 51
                                           ; SOURCE LINE # 52
0000 7800        R     MOV     R0,#LOW timer0_tick
0002 E6                MOV     A,@R0
0003 FE                MOV     R6,A
0004 08                INC     R0
0005 E6                MOV     A,@R0
0006 FF                MOV     R7,A
                                           ; SOURCE LINE # 53
0007         ?C0002:
0007 22                RET     
             ; FUNCTION get_timer0 (END)

             ; FUNCTION init (BEGIN)
                                           ; SOURCE LINE # 55
                                           ; SOURCE LINE # 56
                                           ; SOURCE LINE # 57
0000 759852            MOV     SCON,#052H
                                           ; SOURCE LINE # 58
0003 758921            MOV     TMOD,#021H
C51 COMPILER V8.05a   MAIN                                                                 03/11/2010 12:19:50 PAGE 6   

                                           ; SOURCE LINE # 61
0006 758DFD            MOV     TH1,#0FDH
                                           ; SOURCE LINE # 62
0009 858D8B            MOV     TL1,TH1
                                           ; SOURCE LINE # 64
000C 758C4B            MOV     TH0,#04BH
                                           ; SOURCE LINE # 65
000F 758AFF            MOV     TL0,#0FFH
                                           ; SOURCE LINE # 67
0012 75B802            MOV     IP,#02H
                                           ; SOURCE LINE # 69
0015 D288              SETB    IT0
                                           ; SOURCE LINE # 70
0017 D28A              SETB    IT1
                                           ; SOURCE LINE # 71
0019 75A887            MOV     IE,#087H
                                           ; SOURCE LINE # 72
001C D2A9              SETB    ET0
                                           ; SOURCE LINE # 74
001E D28C              SETB    TR0
                                           ; SOURCE LINE # 75
0020 D28E              SETB    TR1
                                           ; SOURCE LINE # 77
0022 D299              SETB    TI
                                           ; SOURCE LINE # 79
0024 C2B4              CLR     uart_tx_enable
                                           ; SOURCE LINE # 80
0026 22                RET     
             ; FUNCTION init (END)

             ; FUNCTION menu (BEGIN)
                                           ; SOURCE LINE # 97
                                           ; SOURCE LINE # 98
0000         ?C0006:
                                           ; SOURCE LINE # 102
                                           ; SOURCE LINE # 103
0000 7BFF              MOV     R3,#0FFH
0002 7A00        R     MOV     R2,#HIGH ?SC_0
0004 7900        R     MOV     R1,#LOW ?SC_0
0006 120000      E     LCALL   _printf
                                           ; SOURCE LINE # 104
0009 7BFF              MOV     R3,#0FFH
000B 7A00        R     MOV     R2,#HIGH ?SC_3
000D 7900        R     MOV     R1,#LOW ?SC_3
000F 120000      E     LCALL   _printf
                                           ; SOURCE LINE # 105
0012 7BFF              MOV     R3,#0FFH
0014 7A00        R     MOV     R2,#HIGH ?SC_40
0016 7900        R     MOV     R1,#LOW ?SC_40
0018 120000      E     LCALL   _printf
                                           ; SOURCE LINE # 106
001B 7BFF              MOV     R3,#0FFH
001D 7A00        R     MOV     R2,#HIGH ?SC_77
001F 7900        R     MOV     R1,#LOW ?SC_77
0021 120000      E     LCALL   _printf
                                           ; SOURCE LINE # 108
0024 E500        R     MOV     A,tipo_scheda
0026 B40109            CJNE    A,#01H,?C0007
0029 7BFF              MOV     R3,#0FFH
002B 7A00        R     MOV     R2,#HIGH ?SC_114
002D 7900        R     MOV     R1,#LOW ?SC_114
002F 120000      E     LCALL   _printf
C51 COMPILER V8.05a   MAIN                                                                 03/11/2010 12:19:50 PAGE 7   

0032         ?C0007:
                                           ; SOURCE LINE # 109
0032 E500        R     MOV     A,tipo_scheda
0034 B40209            CJNE    A,#02H,?C0008
0037 7BFF              MOV     R3,#0FFH
0039 7A00        R     MOV     R2,#HIGH ?SC_151
003B 7900        R     MOV     R1,#LOW ?SC_151
003D 120000      E     LCALL   _printf
0040         ?C0008:
                                           ; SOURCE LINE # 110
0040 7BFF              MOV     R3,#0FFH
0042 7A00        R     MOV     R2,#HIGH ?SC_3
0044 7900        R     MOV     R1,#LOW ?SC_3
0046 120000      E     LCALL   _printf
                                           ; SOURCE LINE # 111
0049 7BFF              MOV     R3,#0FFH
004B 7A00        R     MOV     R2,#HIGH ?SC_0
004D 7900        R     MOV     R1,#LOW ?SC_0
004F 120000      E     LCALL   _printf
                                           ; SOURCE LINE # 112
0052 7BFF              MOV     R3,#0FFH
0054 7A00        R     MOV     R2,#HIGH ?SC_188
0056 7900        R     MOV     R1,#LOW ?SC_188
0058 120000      E     LCALL   _printf
                                           ; SOURCE LINE # 113
005B 7BFF              MOV     R3,#0FFH
005D 7A00        R     MOV     R2,#HIGH ?SC_204
005F 7900        R     MOV     R1,#LOW ?SC_204
0061 120000      E     LCALL   _printf
                                           ; SOURCE LINE # 114
0064 7BFF              MOV     R3,#0FFH
0066 7A00        R     MOV     R2,#HIGH ?SC_220
0068 7900        R     MOV     R1,#LOW ?SC_220
006A 120000      E     LCALL   _printf
                                           ; SOURCE LINE # 115
006D 7BFF              MOV     R3,#0FFH
006F 7A00        R     MOV     R2,#HIGH ?SC_242
0071 7900        R     MOV     R1,#LOW ?SC_242
0073 120000      E     LCALL   _printf
                                           ; SOURCE LINE # 116
0076 7BFF              MOV     R3,#0FFH
0078 7A00        R     MOV     R2,#HIGH ?SC_275
007A 7900        R     MOV     R1,#LOW ?SC_275
007C 120000      E     LCALL   _printf
                                           ; SOURCE LINE # 117
007F 7BFF              MOV     R3,#0FFH
0081 7A00        R     MOV     R2,#HIGH ?SC_311
0083 7900        R     MOV     R1,#LOW ?SC_311
0085 120000      E     LCALL   _printf
                                           ; SOURCE LINE # 118
0088 7BFF              MOV     R3,#0FFH
008A 7A00        R     MOV     R2,#HIGH ?SC_332
008C 7900        R     MOV     R1,#LOW ?SC_332
008E 120000      E     LCALL   _printf
                                           ; SOURCE LINE # 119
0091 7BFF              MOV     R3,#0FFH
0093 7A00        R     MOV     R2,#HIGH ?SC_357
0095 7900        R     MOV     R1,#LOW ?SC_357
0097 120000      E     LCALL   _printf
                                           ; SOURCE LINE # 121
009A 120000      E     LCALL   _getkey
;---- Variable 'c' assigned to Register 'R7' ----
C51 COMPILER V8.05a   MAIN                                                                 03/11/2010 12:19:50 PAGE 8   

                                           ; SOURCE LINE # 123
009D EF                MOV     A,R7
009E 24D0              ADD     A,#0D0H
00A0 F500        R     MOV     scelta_test,A
                                           ; SOURCE LINE # 125
00A2 D3                SETB    C
00A3 6480              XRL     A,#080H
00A5 9480              SUBB    A,#080H
00A7 400D              JC      ?C0009
00A9 E500        R     MOV     A,scelta_test
00AB 6480              XRL     A,#080H
00AD 9488              SUBB    A,#088H
00AF 5005              JNC     ?C0009
                                           ; SOURCE LINE # 126
00B1 750001      R     MOV     exit_menu,#01H
00B4 8003              SJMP    ?C0004
00B6         ?C0009:
                                           ; SOURCE LINE # 128
00B6 E4                CLR     A
00B7 F500        R     MOV     exit_menu,A
                                           ; SOURCE LINE # 132
00B9         ?C0004:
                                           ; SOURCE LINE # 133
00B9 E500        R     MOV     A,exit_menu
00BB 7003              JNZ     $ + 5H
00BD 020000      R     LJMP    ?C0006
                                           ; SOURCE LINE # 134
00C0 22                RET     
             ; FUNCTION menu (END)

             ; FUNCTION menu_scheda (BEGIN)
                                           ; SOURCE LINE # 135
                                           ; SOURCE LINE # 136
0000         ?C0014:
                                           ; SOURCE LINE # 140
                                           ; SOURCE LINE # 141
0000 7BFF              MOV     R3,#0FFH
0002 7A00        R     MOV     R2,#HIGH ?SC_0
0004 7900        R     MOV     R1,#LOW ?SC_0
0006 120000      E     LCALL   _printf
                                           ; SOURCE LINE # 142
0009 7BFF              MOV     R3,#0FFH
000B 7A00        R     MOV     R2,#HIGH ?SC_3
000D 7900        R     MOV     R1,#LOW ?SC_3
000F 120000      E     LCALL   _printf
                                           ; SOURCE LINE # 143
0012 7BFF              MOV     R3,#0FFH
0014 7A00        R     MOV     R2,#HIGH ?SC_40
0016 7900        R     MOV     R1,#LOW ?SC_40
0018 120000      E     LCALL   _printf
                                           ; SOURCE LINE # 144
001B 7BFF              MOV     R3,#0FFH
001D 7A00        R     MOV     R2,#HIGH ?SC_77
001F 7900        R     MOV     R1,#LOW ?SC_77
0021 120000      E     LCALL   _printf
                                           ; SOURCE LINE # 145
0024 7BFF              MOV     R3,#0FFH
0026 7A00        R     MOV     R2,#HIGH ?SC_3
0028 7900        R     MOV     R1,#LOW ?SC_3
002A 120000      E     LCALL   _printf
                                           ; SOURCE LINE # 146
002D 7BFF              MOV     R3,#0FFH
C51 COMPILER V8.05a   MAIN                                                                 03/11/2010 12:19:50 PAGE 9   

002F 7A00        R     MOV     R2,#HIGH ?SC_0
0031 7900        R     MOV     R1,#LOW ?SC_0
0033 120000      E     LCALL   _printf
                                           ; SOURCE LINE # 147
0036 7BFF              MOV     R3,#0FFH
0038 7A00        R     MOV     R2,#HIGH ?SC_378
003A 7900        R     MOV     R1,#LOW ?SC_378
003C 120000      E     LCALL   _printf
                                           ; SOURCE LINE # 148
003F 7BFF              MOV     R3,#0FFH
0041 7A00        R     MOV     R2,#HIGH ?SC_409
0043 7900        R     MOV     R1,#LOW ?SC_409
0045 120000      E     LCALL   _printf
                                           ; SOURCE LINE # 149
0048 7BFF              MOV     R3,#0FFH
004A 7A00        R     MOV     R2,#HIGH ?SC_440
004C 7900        R     MOV     R1,#LOW ?SC_440
004E 120000      E     LCALL   _printf
                                           ; SOURCE LINE # 150
0051 120000      E     LCALL   _getkey
;---- Variable 'c' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 152
0054 EF                MOV     A,R7
0055 24D0              ADD     A,#0D0H
0057 F500        R     MOV     scelta_scheda,A
                                           ; SOURCE LINE # 154
0059 D3                SETB    C
005A 6480              XRL     A,#080H
005C 9480              SUBB    A,#080H
005E 400D              JC      ?C0015
0060 E500        R     MOV     A,scelta_scheda
0062 6480              XRL     A,#080H
0064 9483              SUBB    A,#083H
0066 5005              JNC     ?C0015
                                           ; SOURCE LINE # 155
0068 750001      R     MOV     exit_menu,#01H
006B 8003              SJMP    ?C0012
006D         ?C0015:
                                           ; SOURCE LINE # 157
006D E4                CLR     A
006E F500        R     MOV     exit_menu,A
                                           ; SOURCE LINE # 161
0070         ?C0012:
                                           ; SOURCE LINE # 162
0070 E500        R     MOV     A,exit_menu
0072 608C              JZ      ?C0014
                                           ; SOURCE LINE # 163
0074 AF00        R     MOV     R7,scelta_scheda
                                           ; SOURCE LINE # 164
0076         ?C0017:
0076 22                RET     
             ; FUNCTION menu_scheda (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 169
                                           ; SOURCE LINE # 170
                                           ; SOURCE LINE # 175
0000 120000      R     LCALL   init
                                           ; SOURCE LINE # 176
0003 C2B5              CLR     WD
                                           ; SOURCE LINE # 180
0005 7BFF              MOV     R3,#0FFH
C51 COMPILER V8.05a   MAIN                                                                 03/11/2010 12:19:50 PAGE 10  

0007 7A00        R     MOV     R2,#HIGH ?SC_463
0009 7900        R     MOV     R1,#LOW ?SC_463
000B 120000      E     LCALL   _printf
                                           ; SOURCE LINE # 181
000E 7BFF              MOV     R3,#0FFH
0010 7A00        R     MOV     R2,#HIGH ?SC_463
0012 7900        R     MOV     R1,#LOW ?SC_463
0014 120000      E     LCALL   _printf
                                           ; SOURCE LINE # 182
0017 120000      R     LCALL   menu_scheda
001A 8F00        R     MOV     tipo_scheda,R7
001C         ?C0018:
                                           ; SOURCE LINE # 184
                                           ; SOURCE LINE # 185
                                           ; SOURCE LINE # 191
001C 120000      R     LCALL   menu
                                           ; SOURCE LINE # 193
001F E500        R     MOV     A,scelta_test
0021 120000      E     LCALL   ?C?CCASE
0024 0000        R     DW      ?C0021
0026 01                DB      01H
0027 0000        R     DW      ?C0022
0029 02                DB      02H
002A 0000        R     DW      ?C0023
002C 03                DB      03H
002D 0000        R     DW      ?C0024
002F 04                DB      04H
0030 0000        R     DW      ?C0025
0032 05                DB      05H
0033 0000        R     DW      ?C0026
0035 06                DB      06H
0036 0000        R     DW      ?C0027
0038 07                DB      07H
0039 0000              DW      00H
003B 0000        R     DW      ?C0018
                                           ; SOURCE LINE # 194
                                           ; SOURCE LINE # 195
003D         ?C0021:
003D 120000      E     LCALL   test_ram
                                           ; SOURCE LINE # 196
0040 80DA              SJMP    ?C0018
                                           ; SOURCE LINE # 197
0042         ?C0022:
0042 120000      E     LCALL   test_adc
                                           ; SOURCE LINE # 198
0045 80D5              SJMP    ?C0018
                                           ; SOURCE LINE # 199
0047         ?C0023:
0047 120000      E     LCALL   test_pio_menu
                                           ; SOURCE LINE # 200
004A 80D0              SJMP    ?C0018
                                           ; SOURCE LINE # 201
004C         ?C0024:
004C 120000      E     LCALL   test_uartU27_ricevi
                                           ; SOURCE LINE # 202
004F 80CB              SJMP    ?C0018
                                           ; SOURCE LINE # 203
0051         ?C0025:
0051 120000      E     LCALL   test_uartU27_trasmetti
                                           ; SOURCE LINE # 204
0054 80C6              SJMP    ?C0018
                                           ; SOURCE LINE # 205
C51 COMPILER V8.05a   MAIN                                                                 03/11/2010 12:19:50 PAGE 11  

0056         ?C0026:
0056 120000      E     LCALL   test_uartU30
                                           ; SOURCE LINE # 206
0059 80C1              SJMP    ?C0018
                                           ; SOURCE LINE # 207
005B         ?C0027:
005B 120000      R     LCALL   menu_scheda
005E 8F00        R     MOV     tipo_scheda,R7
                                           ; SOURCE LINE # 208
0060 80BA              SJMP    ?C0018
             ; FUNCTION main (END)

C51 COMPILER V8.05a   MAIN                                                                 03/11/2010 12:19:50 PAGE 12  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
menu_scheda. . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  exit_menu. . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
  c. . . . . . . . . . . . . . . . . .  * REG *  DATA   CHAR     0007H  1
timer0_isr . . . . . . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
test_pio_menu. . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
test_uartU27_ricevi. . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
tipo_scheda. . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0000H  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
size_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
uchar. . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
_printf. . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
WD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
test_uartU30 . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
scelta_test. . . . . . . . . . . . . .  PUBLIC   DATA   CHAR     0001H  1
aaa. . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0002H  1
main . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
ushort . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
init . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
del. . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0003H  1
menu . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  exit_menu. . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
  c. . . . . . . . . . . . . . . . . .  * REG *  DATA   CHAR     0007H  1
UINT . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
uint . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
scelta_scheda. . . . . . . . . . . . .  PUBLIC   DATA   CHAR     0004H  1
test_adc . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
uart_tx_enable . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
timer0_tick. . . . . . . . . . . . . .  PUBLIC   IDATA  U_INT    0000H  2
test_ram . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
test_uartU27_trasmetti . . . . . . . .  EXTERN   CODE   PROC     -----  -----
USHORT . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
_getkey. . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
UCHAR. . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
get_timer0 . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
ritardo. . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0005H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    500    ----
   CONSTANT SIZE    =    467    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V8.05a   MAIN                                                                 03/11/2010 12:19:50 PAGE 13  

   DATA SIZE        =      6       2
   IDATA SIZE       =      2    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
